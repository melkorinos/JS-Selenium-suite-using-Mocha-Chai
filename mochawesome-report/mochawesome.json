{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-25T20:13:21.473Z",
    "end": "2021-10-25T20:13:41.786Z",
    "duration": 20313,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "72917ed9-08d9-40d6-8dfc-e375a77705ac",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff5bb190-857c-4ee9-8665-cb8f5f2a7548",
          "title": "Tests for another feature would go here",
          "fullFile": "C:\\Users\\Dimitris\\Desktop\\study\\Ticketswap final\\test\\otherFeatureTests.js",
          "file": "\\test\\otherFeatureTests.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Tests for another feature would go here\"",
              "fullTitle": "Tests for another feature would go here \"before each\" hook in \"Tests for another feature would go here\"",
              "timedOut": null,
              "duration": 675,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();\ndriver.get(\"https://www.ticketswap.com/\");",
              "err": {},
              "uuid": "1518bfaf-e853-4d1e-9135-cb124ea4e93b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Tests for another feature would go here\"",
              "fullTitle": "Tests for another feature would go here \"after each\" hook in \"Tests for another feature would go here\"",
              "timedOut": null,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "bb8b4670-1bed-48fb-9046-ea8430518b91",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "First test of other feature, this sample tests if there is a facebook element for a non logged user",
              "fullTitle": "Tests for another feature would go here First test of other feature, this sample tests if there is a facebook element for a non logged user",
              "timedOut": null,
              "duration": 3744,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//click the sell tickets button\nawait driver.findElement(By.xpath('//*[@id=\"__next\"]/div[1]/div/nav/ul/li[6]/a')).click();\n//wait till onboarding page loads\nawait driver.wait(until.elementLocated(By.xpath('//*[@id=\"__next\"]/div[3]/div[1]/button'),10000));\n//click the start selling button\nawait driver.findElement(By.className('css-8cc4q9 e1dvqv261')).click();\n//wait till login pop up loads, look for page header\nawait driver.wait(until.elementLocated(By.xpath('/html/body/ticketswap-portal[7]/div/div/header'),10000));\n\n//find the facebook login element\nawait driver.findElement(By.xpath('/html/body/ticketswap-portal[7]/div/div/div/div/div/div/div/button[1]')).then((element)=>{\n  //chai assert\n  expect(element).to.exist;\n});\n\n//new it block goes here",
              "err": {},
              "uuid": "47a4777a-9504-4987-a388-97fc1113f3ce",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47a4777a-9504-4987-a388-97fc1113f3ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3744,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "42b6252c-13c1-45ef-a0d7-e280aa75cc34",
          "title": "Assignment : Search field tests",
          "fullFile": "C:\\Users\\Dimitris\\Desktop\\study\\Ticketswap final\\test\\searchBarTests.js",
          "file": "\\test\\searchBarTests.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Assignment : Search field tests\"",
              "fullTitle": "Assignment : Search field tests \"before each\" hook in \"Assignment : Search field tests\"",
              "timedOut": null,
              "duration": 534,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();\ndriver.get(\"https://www.ticketswap.com/\");",
              "err": {},
              "uuid": "ae4c38f3-51d3-47a0-b75a-4313692cdfd6",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Assignment : Search field tests\"",
              "fullTitle": "Assignment : Search field tests \"after each\" hook in \"Assignment : Search field tests\"",
              "timedOut": null,
              "duration": 25,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "a71f05de-72f1-4221-b900-2659c9db84ac",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Test 1: Ensures special characters are handled from the server. Character is:  ",
              "fullTitle": "Assignment : Search field tests Test 1: Ensures special characters are handled from the server. Character is:  ",
              "timedOut": null,
              "duration": 4259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//assign the naughty string as a search query\nvar search_query = naughty;\n//send keys to the search box\nawait driver.findElement(By.id('site-search-input')).sendKeys(search_query);\n//wait for 1 second\nawait driver.sleep(1000);\n\n//get the either the result of the search or the element that states no results found using css selectors\nlet result = await driver.wait(until.elementLocated(By.css('.css-vyo6tp.eloqthd2, .css-5gnb7e.eeor7st12 h3'),10000));\n//assert the result exists \nexpect(result).to.exist;\n//get the text and the tag name of the result\nlet resultText = await result.getText();\nlet tagName = await result.getTagName();\n//check if the result is an h3 element\nif ( tagName === \"h3\" ) {\n  //if it is h3 then check to see if it includes  \" No results\"\n  expect(resultText).to.includes('No results');\n}else {\n  //if it is not h3 then it is search results were returned therefore check if ******\n  expect(resultText.length).to.be.greaterThan(10);\n  console.log(resultText);\n}",
              "err": {},
              "uuid": "8de62346-44bb-41b3-b67b-e2a61df7918f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test 1: Ensures special characters are handled from the server. Character is:  undefined",
              "fullTitle": "Assignment : Search field tests Test 1: Ensures special characters are handled from the server. Character is:  undefined",
              "timedOut": null,
              "duration": 4038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//assign the naughty string as a search query\nvar search_query = naughty;\n//send keys to the search box\nawait driver.findElement(By.id('site-search-input')).sendKeys(search_query);\n//wait for 1 second\nawait driver.sleep(1000);\n\n//get the either the result of the search or the element that states no results found using css selectors\nlet result = await driver.wait(until.elementLocated(By.css('.css-vyo6tp.eloqthd2, .css-5gnb7e.eeor7st12 h3'),10000));\n//assert the result exists \nexpect(result).to.exist;\n//get the text and the tag name of the result\nlet resultText = await result.getText();\nlet tagName = await result.getTagName();\n//check if the result is an h3 element\nif ( tagName === \"h3\" ) {\n  //if it is h3 then check to see if it includes  \" No results\"\n  expect(resultText).to.includes('No results');\n}else {\n  //if it is not h3 then it is search results were returned therefore check if ******\n  expect(resultText.length).to.be.greaterThan(10);\n  console.log(resultText);\n}",
              "err": {},
              "uuid": "0ffaf597-ae1b-4c91-9512-592f7a11650f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test 1: Ensures special characters are handled from the server. Character is:  undef",
              "fullTitle": "Assignment : Search field tests Test 1: Ensures special characters are handled from the server. Character is:  undef",
              "timedOut": null,
              "duration": 4120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//assign the naughty string as a search query\nvar search_query = naughty;\n//send keys to the search box\nawait driver.findElement(By.id('site-search-input')).sendKeys(search_query);\n//wait for 1 second\nawait driver.sleep(1000);\n\n//get the either the result of the search or the element that states no results found using css selectors\nlet result = await driver.wait(until.elementLocated(By.css('.css-vyo6tp.eloqthd2, .css-5gnb7e.eeor7st12 h3'),10000));\n//assert the result exists \nexpect(result).to.exist;\n//get the text and the tag name of the result\nlet resultText = await result.getText();\nlet tagName = await result.getTagName();\n//check if the result is an h3 element\nif ( tagName === \"h3\" ) {\n  //if it is h3 then check to see if it includes  \" No results\"\n  expect(resultText).to.includes('No results');\n}else {\n  //if it is not h3 then it is search results were returned therefore check if ******\n  expect(resultText.length).to.be.greaterThan(10);\n  console.log(resultText);\n}",
              "err": {},
              "uuid": "ae5a2582-e02a-420d-b983-d2df4a6b08f5",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test 2 : Checks search query is included in test results",
              "fullTitle": "Assignment : Search field tests Test 2 : Checks search query is included in test results",
              "timedOut": null,
              "duration": 5224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use a general term to receive many results\nvar search_query = \"Band\";\n//send keys to the search box\nawait driver.findElement(By.id(\"site-search-input\")).sendKeys(search_query);\n//wait till results drop down appears\nawait driver.wait(until.elementLocated(By.xpath('//*[@id=\"site-search-menu\"]/div[3]/a'),10000));\n//find and click more results button\nawait driver.findElement(By.xpath('//*[@id=\"site-search-menu\"]/div[3]/a')).click();\n//wait till next page loads\nawait driver.wait(until.elementLocated(By.xpath('//*[@id=\"__next\"]/div[2]/div[1]/h3'),10000));\n//collect all the search result elements and get their text\nlet elements = await driver.findElements(By.className('css-11rlpdz eh8fd905'))\nfor (let element of elements) {\n  let text = await element.getText();\n  //assert the text contains the search query\n  expect(text).to.include(search_query);\n}",
              "err": {},
              "uuid": "0efe9374-df55-4d4d-8722-e296ba44054f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8de62346-44bb-41b3-b67b-e2a61df7918f",
            "0ffaf597-ae1b-4c91-9512-592f7a11650f",
            "ae5a2582-e02a-420d-b983-d2df4a6b08f5",
            "0efe9374-df55-4d4d-8722-e296ba44054f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17641,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "autoOpen": "true"
      },
      "version": "5.2.0"
    }
  }
}